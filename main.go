package main

import (
	"fmt"
	"net/http"

	"github.com/airdb/sailor/deployutil"
	"github.com/airdb/sailor/faas"
	"github.com/go-chi/chi/v5"
	"github.com/go-chi/chi/v5/middleware"
	"github.com/go-chi/render"

	_ "github.com/swaggo/http-swagger/example/go-chi/docs" // docs is generated by Swag CLI, you have to import it.
)

// @title Airdb Serverlesss Example API
// @version 0.0.1
// @description This is a sample server Petstore server.
// @termsOfService https://airdb.github.io/terms.html

// @contact.name API Support
// @contact.url https://work.weixin.qq.com/kfid/kfc5fdb2e0a1f297753
// @contact.email info@airdb.com

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @info.x-logo.url: http://www.apache.org/licenses/LICENSE-2.0.html

// @host service-iw6drlfr-1251018873.sh.apigw.tencentcs.com
// @BasePath /test
func main() {
	r := chi.NewRouter()
	r.Use(middleware.Logger)
	r.Use(render.SetContentType(render.ContentTypeHTML))

	r.Get("/chi/", RootHandler)
	r.Get("/chi/item/query", HandleItemQuery)

	fmt.Println("hello", deployutil.GetDeployStage())

	faas.RunTencentChiWithSwagger(r)
}

// RootHandler - Returns all the available APIs
// @Summary Root handler.
// @Description Tells if the chi-swagger APIs are working or not.
// @Tags item
// @Accept  json
// @Produce  json
// @Success 200 {string} response "api response"
// @Router / [get]
func RootHandler(w http.ResponseWriter, r *http.Request) {
	w.Write([]byte("welcome hello"))
	w.WriteHeader(http.StatusOK)
}

// HandleItmeQuery - query item.
// @Summary Query item.
// @Description Tells if the chi-swagger APIs are working or not.
// @Tags item
// @Accept  json
// @Produce  json
// @Success 200 {string} response "api response"
// @Router /item/query [get]
func HandleItemQuery(w http.ResponseWriter, r *http.Request) {
	w.Write([]byte("welcome hello"))
	w.WriteHeader(http.StatusOK)
}
